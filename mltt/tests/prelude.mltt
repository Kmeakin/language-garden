-- Combinators

let id : fun (A : Type) -> A -> A :=
  fun _ a := a;

let always : fun (A : Type) (B : Type) -> A -> B -> A :=
  fun _ _ a _ := a;

let compose : fun (A : Type) (B : Type) (C : Type) -> (A -> B) -> (B -> C) -> (A -> C) :=
  fun _ _ _ ab bc :=
      fun a := bc (ab a);

Type
