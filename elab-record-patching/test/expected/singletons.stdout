<input> : Type :=
  let intro-sing : fun (A : Type) (x : A) -> A [= x] :=
    fun A x := #sing-intro x;
  let elim-sing : fun (A : Type) (x : A) (sing-x : A [= x]) -> A :=
    fun A x sing-x := #sing-elim sing-x x;
  let sing-tm-1 :
        fun (A : Type) (P : (fun (x : A) -> A [= x]) -> Type)
            (f : fun (x : A) -> A [= x]) (prf : P (fun x := #sing-intro x))
            -> P f
  := fun A P f prf := prf; Type
